name: Python application

- name: Install Poetry Action
# You may pin to the exact commit or the version.
# uses: snok/install-poetry@93ada01c735cc8a383ce0ce2ae205a21c415379b
uses: snok/install-poetry@v1.3.4
with:
# The Poetry version to install
version: # default is latest
# Whether Poetry should create a virtualenv or not
virtualenvs-create: # optional, default is true
# Whether Poetry should create virtualenvs in the project directory or not
virtualenvs-in-project: # optional, default is false
# The Poetry virtualenv path
virtualenvs-path: # optional, default is {cache-dir}/virtualenvs
# Whether to install many packages at once or one by one. This can fix PyPI DNS resolution errors, but also slows down the installation
installer-parallel: # optional, default is true
# Arguments passed directly to the Poetry installation script. For example --force.
installation-arguments: # optional

          
on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

permissions:
  contents: read

jobs:
  build:
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: ./example-app
    steps:
    - uses: actions/checkout@v4
    - name: Set up Python 3.10
      uses: actions/setup-python@v3
      with:
        python-version: "3.11"
    - name: Install Poetry Action
      uses: snok/install-poetry@v1.3.4
    - run: poetry install --no-root
    - run : poetry run task test
    - run : poetry run task lint
    - run : poetry run task formatter
    - run : poetry run task security
