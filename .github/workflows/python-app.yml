name: Python application

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

permissions:
  contents: read

jobs:
  # Główna grupa jobów
  build:
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: ./example-app
    concurrency:
      group: build
    steps:
    - uses: actions/checkout@v4
    - name: Cache build venv
      id: cached-poetry-dependencies
      uses: actions/cache@v3
      with:
        path: ~/.cache/pypoetry/virtualenvs
        key: ${{ runner.os }}-venv-${{ hashFiles('**/poetry.lock') }}
    - name: Set up Python 3.11
      uses: actions/setup-python@v3
      with:
        python-version: "3.11"
    - name: Install Poetry Action
      uses: snok/install-poetry@v1.3.4
    - run: poetry install --no-root

  # Grupa jobów statycznych
  linter:
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: ./example-app
    concurrency:
      group: linter
    needs: build  # Linter uruchamia się po zakończeniu joba 'build'
    steps:
    - uses: actions/checkout@v4
    - name: Cache build venv
      id: cached-poetry-dependencies
      uses: actions/cache@v3
      with:
        path: ~/.cache/pypoetry/virtualenvs
        key: ${{ runner.os }}-venv-${{ hashFiles('**/poetry.lock') }}
    - name: Set up Python 3.11
      uses: actions/setup-python@v3
      with:
        python-version: "3.11"
    - name: Install Poetry Action
      uses: snok/install-poetry@v1.3.4
    - run: poetry install --no-root
    - run: poetry run task lint

  formatter:
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: ./example-app
    concurrency:
      group: formatter
    needs: build  # Formatter uruchamia się po zakończeniu joba 'build'
    steps:
    - uses: actions/checkout@v4
    - name: Cache build venv
      id: cached-poetry-dependencies
      uses: actions/cache@v3
      with:
        path: ~/.cache/pypoetry/virtualenvs
        key: ${{ runner.os }}-venv-${{ hashFiles('**/poetry.lock') }}
    - name: Set up Python 3.11
      uses: actions/setup-python@v3
      with:
        python-version: "3.11"
    - name: Install Poetry Action
      uses: snok/install-poetry@v1.3.4
    - run: poetry install --no-root
    - run: poetry run task formatter

  security:
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: ./example-app
    concurrency:
      group: security
    needs: build  # Security uruchamia się po zakończeniu joba 'build'
    steps:
    - uses: actions/checkout@v4
    - name: Cache build venv
      id: cached-poetry-dependencies
      uses: actions/cache@v3
      with:
        path: ~/.cache/pypoetry/virtualenvs
        key: ${{ runner.os }}-venv-${{ hashFiles('**/poetry.lock') }}
    - name: Set up Python 3.11
      uses: actions/setup-python@v3
      with:
        python-version: "3.11"
    - name: Install Poetry Action
      uses: snok/install-poetry@v1.3.4
    - run: poetry install --no-root
    - run: poetry run task security

  # Testy statyczne poza główną grupą
  static_tests:
    runs-on: ubuntu-latest
    concurrency:
      group: static_tests
    needs: [build, linter, formatter, security]  # Uruchamia się po zakończeniu jobów z głównej grupy
    steps:
    - uses: actions/checkout@v4
    - name: Cache build venv
      id: cached-poetry-dependencies
      uses: actions/cache@v3
      with:
        path: ~/.cache/pypoetry/virtualenvs
        key: ${{ runner.os }}-venv-${{ hashFiles('**/poetry.lock') }}
    - name: Set up Python 3.11
      uses: actions/setup-python@v3
      with:
        python-version: "3.11"
    - name: Install Poetry Action
      uses: snok/install-poetry@v1.3.4
    - run: poetry install --no-root
    - name: Run Static Tests (e.g. additional linting, security analysis)
      run: |
        poetry run task additional-lint
        poetry run task additional-security
